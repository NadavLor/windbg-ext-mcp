name: CI

on:
  push:
    branches: [ main, master, feature/** ]
  pull_request:
    branches: [ main, master ]

jobs:
  python-tests:
    name: Python • tests (Poetry)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

      - name: Install deps
        run: poetry install --no-interaction --no-ansi

      - name: Run tests
        run: poetry run pytest -q

  windows-cpp-validate:
    name: Windows • C++ project validate
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify project files exist
        shell: pwsh
        run: |
          if (!(Test-Path 'extension/windbgmcpExt.sln')) { Write-Error 'Missing solution file'; exit 1 }
          if (!(Test-Path 'extension/windbgmcpExt.vcxproj')) { Write-Error 'Missing vcxproj file'; exit 1 }
          Write-Host 'Solution and project files found.'

      - name: Locate MSBuild (vswhere)
        id: msbuild
        shell: pwsh
        run: |
          $vswhere = "$Env:ProgramFiles(x86)\Microsoft Visual Studio\Installer\vswhere.exe"
          if (Test-Path $vswhere) {
            & $vswhere -latest -products * -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe | Select-Object -First 1 | Tee-Object -Variable msb
            if ($msb) { echo "msbuild=$msb" >> $Env:GITHUB_OUTPUT }
          }

      - name: Try build (best-effort)
        if: steps.msbuild.outputs.msbuild != ''
        shell: pwsh
        continue-on-error: true
        run: |
          & "${{ steps.msbuild.outputs.msbuild }}" extension\windbgmcpExt.sln /m /p:Configuration=Release /p:Platform=x64 /nologo

      - name: Summary
        shell: pwsh
        run: |
          Write-Host 'C++ project validated. Build attempted if MSBuild was available.'

